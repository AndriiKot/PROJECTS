
1.
а)
select 
	f.title
from film f 
	join inventory i 
		on(f.film_id = i.film_id)
	join rental r 
		on(r.inventory_id = i.inventory_id)
	join payment p 
		on(p.rental_id = r.rental_id)
group by 
	f.title
having 
	sum(p.amount) > 150
union
select 
	f.title
from film f 
where rental_rate > 4

б)
select 
	f.title
from film f 
	join inventory i 
		on(f.film_id = i.film_id)
	join rental r 
		on(r.inventory_id = i.inventory_id)
	join payment p 
		on(p.rental_id = r.rental_id)
group by 
	f.title
having 
	sum(p.amount) > 150
union   all
select 
	f.title
from film f 
where rental_rate > 4


2. При объеденении двух запросов при помощи ключевого слова 'union'
   результаты двух запросов объединяются а дубликаты удаляются

3. При объеденении двух запросов прио помощи ключевого слова 'union all'
   результфты двух запросов обхединяются буз удаления дубликатов

4.
select 
	f.title,
	'amount' as src
from film f 
	join inventory i 
		on(f.film_id = i.film_id)
	join rental r 
		on(r.inventory_id = i.inventory_id)
	join payment p 
		on(p.rental_id = r.rental_id)
group by 
	f.title
having 
	sum(p.amount) > 150
union all
select 
	f.title,
	'rental rate' as src
from film f 
where rental_rate > 4;

select 
	f.title,
	'amount' as src
from film f 
	join inventory i 
		on(f.film_id = i.film_id)
	join rental r 
		on(r.inventory_id = i.inventory_id)
	join payment p 
		on(p.rental_id = r.rental_id)
group by 
	f.title
having 
	sum(p.amount) > 150
union 
select 
	f.title,
	'rental rate' as src
from film f 
where rental_rate > 4;


5.  Две строки считаются дубликатами елси у низ совподает значение  во всез ячейках
    Поэтомы перведущий запрос можно использовать как с 'union' так и с 'union all'
    потому что у каждого из запросов есть свое уникальное поле 'src'

6. "union all" не нагружает систему дополнительной проверкой на уникальность что повыщает производительность
   запроса

7. Названия столбцов будет взято из первого запроса не зивисимосит от 'alis'  второго запроса

8. При объеденении запросов должно выполнятся два условия
   Первое.
         Количество столбцов в каждом из запросов должно быть одинаково
   Второе.
 	 Типы столбцов должны быть соопостовимы

9. Соопостовимые типы данных это такие типы при котором можно преобразовать не явным обзаром один  тип к другому

10. При объеденеини запросов если количество полей не совподает то будет вызванна ошибка.

11. 'except' команда которая исключает из первого запроса запросы второго

12. Для получения пересечения двух запросов исиользуется команда 'insersect'

13. 'union all' 'except' 'ucion' выполняются в то порядке в каком указаны в запросе
    'intesect'  выполняется последним



























